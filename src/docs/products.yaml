paths:
  /api/products:
    get:
      summary: Obtiene todos los productos
      tags:
        - Products
      responses:
        "200":
          description: "Los productos fueron obtenidos satisfactoriamente de la base de datos"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        "500":
          description: "Error interno del servidor"

  /api/products/{pid}:
    get:
      summary: Obtiene el producto con el requerido ID.
      tags:
        - Products
      parameters:
        - name: pid
          in: path
          description: ID del producto.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "El producto fue obtenido satisfactoriamente de la base de datos"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        "404":
          description: "Producto no encontrado"

components:
  schemas:
    Product:
      type: object
      properties:
        id:
          type: string
          description: ID del producto
        title:
          type: string
          description: Título del producto
        description:
          type: string
          description: Descripción del producto
        price:
          type: number
          format: float
          description: Precio del producto
        code:
          type: string
          description: Código único del producto
        stock:
          type: number
          description: Stock del producto
        status:
          type: boolean
          description: Estado del producto (true = activo, false = inactivo)
        category:
          type: string
          description: Categoría del producto
        thumbnails:
          type: array
          items:
            type: string
          description: Miniaturas del producto